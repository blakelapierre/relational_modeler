{"version":3,"names":[],"mappings":"","sources":["ohmLoader.js"],"sourcesContent":["import fs from 'fs';\nimport ohm from 'ohm-js';\n\nexport function loadGrammarWithSemantics(grammarName, semanticNames = [], fileName = `./grammar/${grammarName}.ohm`) {\n  const grammar = ohm.grammars(fs.readFileSync(fileName))[grammarName],\n        semantics = grammar.semantics();\n\n  semanticNames.forEach(addSemanticName);\n\n  return {grammar, semantics};\n\n  function addSemanticName(name) {\n    const s = require(`./grammar/${grammarName}.${name}.semantics`).default;\n    semantics.addOperation(name, s);\n  }\n}\n\nexport function run(model, grammar, semantics, operation) {\n  const match = grammar.match(model);\n  if (match.succeeded()) {\n    const result = semantics(match).toObject();\n    return result;\n  }\n  else {\n    console.error(match.message);\n  }\n}\n\nexport function runFromFile(modelFile, grammar, semantics, operation) {\n  return run(fs.readFileSync(modelFile).toString(), grammar, semantics, operation);\n}"],"file":"ohmLoader.js","sourceRoot":"/source/"}