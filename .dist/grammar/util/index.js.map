{"version":3,"names":[],"mappings":"","sources":["grammar/util/index.js"],"sourcesContent":["export function join(obj) {\n  for (let key in obj) {\n    const value = obj[key];\n    if (value === undefined) continue;\n    else if (typeof value === 'function') obj[key] = value(o => o.toObject());\n    else if (value.toObject) obj[key] = value.toObject();\n  }\n  return obj;\n}\n\nexport function first(obj) { return obj.toObject()[0]; }"],"file":"grammar/util/index.js","sourceRoot":"/source/"}