"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = "RM {\n  Model = name AttributeList? Contained<Schema*>\n  Schema = name AttributeList? Contained<Table*>\n\n  Table = name AttributeList? Dependency*\n\n  AttributeList = Contained<ListOf<Attribute, \",\">>\n  Attribute = PrimaryKey? name Optional? Type?\n\n  PrimaryKey = \"!\"\n  Optional = \"?\"\n\n  Type = List\n       | Set\n\n  List = SquareContained<ListOf<Value, \",\">>\n  Set = Contained<ListOf<Value, \",\">>\n  Value = digit+\n        | CContained<\"'\", name, \"'\">\n\n  Dependency = arity? dependency_glyph arity? PrimaryKey? Reference Optional? RoundContained<ReferenceName>?\n\n  Reference = SchemaTableName\n            | TableName\n\n  ReferenceName = name\n\n  SchemaTableName = name \".\" name\n  TableName = name\n\n  Contained<element> = CContained<\"{\", element, \"}\">\n  SquareContained<element> = CContained<\"[\", element, \"]\">\n  RoundContained<element> = CContained<\"(\", element, \")\">\n\n  CContained<open, element, close> = open element close\n\n  name = first_character additional_character*\n  first_character = letter | \"_\"\n  additional_character = first_character | alnum\n\n  arity = \"*\" | \"+\" | number\n  dependency_glyph = \"->\"\n\n  number = digit+\n}\n\nRM_PGSQL <: RM {\n  Type := List\n        | Set\n        | SQLType\n\n  SQLType = \"bigint\"\n          | \"smallint\"\n          | \"integer\"\n          | \"real\"\n          | \"double precision\"\n          | \"smallserial\"\n          | \"serial\"\n          | \"bigserial\"\n          | \"money\"\n          | \"blob\"\n          | \"bytea\"\n          | \"boolean\"\n          | \"text\"\n          | \"timestamp\"\n          | \"date\"\n          | \"time\"\n          | \"interval\"\n          | \"point\"\n          | \"line\"\n          | \"lseq\"\n          | \"box\"\n          | \"path\"\n          | \"polygon\"\n          | \"circle\"\n          | \"cidr\"\n          | \"inet\"\n          | \"macaddr\"\n          | \"json\"\n          | \"jsonb\"\n          | \"int4range\"\n          | \"int8range\"\n          | \"numrange\"\n          | \"tsrange\"\n          | \"tstzrange\"\n          | \"daterange\"\n          | Numeric\n          | VarChar\n\n  Numeric = numeric RoundContained<NumericParameters>?\n  NumericParameters = Precision OptionalScale?\n  Precision = number\n  OptionalScale = \",\" number\n\n  numeric = \"numeric\" | \"decimal\"\n\n  VarChar = \"varchar\" RoundContained<number>?\n}";