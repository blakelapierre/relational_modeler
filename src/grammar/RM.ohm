RM {
  Model = name AttributeList? Contained<Schema*>
  Schema = name AttributeList? Contained<Table*>

  Table = name AttributeList? Dependency*

  AttributeList = Contained<ListOf<Attribute, ",">>
  Attribute = PrimaryKey? name Optional? Type?

  PrimaryKey = "!"
  Optional = "?"

  Type = List
       | Set

  List = SquareContained<ListOf<Value, ",">>
  Set = Contained<ListOf<Value, ",">>
  Value = digit+
        | IContained<"'", name, "'">

  Dependency = arity? dependency_glyph arity? Reference

  Reference = SchemaTableName
            | TableName

  SchemaTableName = name "." name
  TableName = name

  Contained<element> = IContained<"{", element, "}">
  SquareContained<element> = IContained<"[", element, "]">

  IContained<open, element, close> = open element close

  name = first_character additional_character*
  first_character = letter | "_"
  additional_character = first_character | alnum

  arity = "*" | "+" | digit+
  dependency_glyph = "->"
}

RM_SQL <: RM {
  Type := List
        | Set
        | SQLType

  SQLType = "bigint"
          | "serial"
          | "bigserial"
          | "text"
          | "timestamp"
}